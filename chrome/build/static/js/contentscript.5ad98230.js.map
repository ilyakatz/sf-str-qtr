{"version":3,"file":"static/js/contentscript.5ad98230.js","mappings":"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","sources":["FilloutForm.ts","contentscript.ts"],"sourcesContent":["// Copyright 2023 ilya\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nlet formElement: HTMLFormElement | null = null;\nlet specificFrame: Document | null = null;\n\nfunction setupContext() {\n  console.log(`Updating context`);\n  // @ts-ignore\n  specificFrame = (window.frames[\"ACADialogFrame\"] as Window)?.document;\n  formElement = specificFrame?.querySelector(\"form\");\n  console.log(`✅ Updated frame context`);\n}\n\nexport function fillOutForm(\n  typeOfStay = \"Hosted\",\n  currentQuarter: number,\n  currentYear: number,\n  checkIn: string,\n  checkOut: string,\n  airbnbId: string\n) {\n  setupContext();\n  updateTypeOfStay(typeOfStay);\n  updateCurrentQuarter(currentQuarter);\n  setCurrentYear(currentYear);\n  updateCheckinDate(checkIn);\n  updateCheckoutDate(checkOut);\n  selectAirbnb();\n  updateAirbnbListingId(airbnbId);\n  submitForm();\n}\n\nfunction updateTypeOfStay(typeOfStay: string) {\n  console.log(`Updating type of stay`);\n  const selectElement = specificFrame?.querySelector(\"select\") as HTMLSelectElement | null;\n  if (selectElement) {\n    selectElement.value = typeOfStay;\n    if (selectElement.value === typeOfStay) {\n      console.log(`✅ Type of stay set to ${selectElement.value}`);\n    } else {\n      console.log(`❌ Type of stay is not set correctly`);\n    }\n  }\n}\n\nfunction updateAirbnbListingId(airbnbId: string) {\n  console.log(`Updating Airbnb Listing ID`);\n\n  // Find the label element\n  const labels = specificFrame?.querySelectorAll(\"label\");\n  let labelElement: HTMLLabelElement | null = null;\n  labels?.forEach((label) => {\n    if (label.innerText === \"Listing ID:\") {\n      labelElement = label;\n    }\n  });\n\n  if (labelElement) {\n    // Find the input element\n  // @ts-ignore\n    const input = labelElement.closest(\".ACA_Form\")?.querySelector(\"input\") as HTMLInputElement | null;\n\n    if (input) {\n      input.value = airbnbId;\n    } else {\n      console.log(`❌ Input element not found for ${input}`);\n    }\n  } else {\n    console.log(`❌ Label element not found for ${labelElement}`);\n  }\n}\n\nfunction selectAirbnb() {\n  console.log(`Selecting Airbnb service`);\n\n  // Find the label element\n  const labels = specificFrame?.querySelectorAll(\"label\");\n  let serviceLabel: HTMLLabelElement | null = null;\n  const regex = /^Service Name/;\n  labels?.forEach((label) => {\n    if (regex.test(label.textContent || \"\")) {\n      serviceLabel = label;\n    }\n  });\n\n  if (serviceLabel) {\n    // Find the parent element with class \"ACA_Form\"\n  // @ts-ignore\n    const parentACAForm = serviceLabel.closest(\".ACA_Form\") as HTMLElement | null;\n\n    if (parentACAForm) {\n      // Find the select element within the parent element\n      const serviceSelect = parentACAForm.querySelector(\"select\") as HTMLSelectElement | null;\n\n      if (serviceSelect) {\n        // Create an array for storing select options values\n        const serviceDropdownValues: string[] = [];\n\n        // Iterate through the option elements\n        serviceSelect.querySelectorAll(\"option\").forEach((option) => {\n          const value = option.value;\n          if (value !== \"\") {\n            serviceDropdownValues.push(value);\n          }\n        });\n\n        if (serviceDropdownValues.length > 0) {\n          const service = serviceDropdownValues[0];\n\n          // Set the value of the select element\n          serviceSelect.value = service;\n          console.log(`✅ Service set to ${service}`);\n        } else {\n          console.log(`❌ No valid service values found`);\n        }\n      } else {\n        console.log(`❌ Select element not found within .ACA_Form`);\n      }\n    } else {\n      console.log(`❌ .ACA_Form parent element not found`);\n    }\n  } else {\n    console.log(`❌ Label element not found`);\n  }\n}\n\nfunction updateCheckoutDate(checkOutDate: string) {\n  if (updateDate(\"Check Out Date:\", checkOutDate)) {\n    console.log(`✅ Check Out Date updated successfully`);\n  } else {\n    console.log(`❌ Check Out Date update failed`);\n  }\n}\n\nfunction updateCheckinDate(checkInDate: string) {\n  if (updateDate(\"Check In Date:\", checkInDate)) {\n    console.log(`✅ Check In Date updated successfully`);\n  } else {\n    console.log(`❌ Check In Date update failed`);\n  }\n}\n\nfunction updateDate(labelText: string, dateValue: string) {\n  // Find the label element\n  const labels = specificFrame?.querySelectorAll(\"label\");\n  let dateLabel: HTMLLabelElement | null = null;\n  labels?.forEach((label) => {\n    if ((label.textContent || \"\").includes(labelText)) {\n      dateLabel = label;\n    }\n  });\n\n  if (dateLabel) {\n    // Find the input element\n  // @ts-ignore\n    const dateInput = dateLabel.closest(\".ACA_Form\")?.querySelector(\"input\") as HTMLInputElement | null;\n\n    if (dateInput) {\n      // Set the value of the input element\n      dateInput.value = dateValue;\n      return true; // Operation succeeded\n    } else {\n      console.log(`❌ Input element not found for ${labelText}`);\n    }\n  } else {\n    console.log(`❌ Label element not found for ${labelText}`);\n  }\n  return false; // Operation failed\n}\n\nfunction setCurrentYear(currentYear: number) {\n  // Find the label element\n  const labels = specificFrame?.querySelectorAll(\"label\");\n  let reportingYearLabel: HTMLLabelElement | null = null;\n  labels?.forEach((label) => {\n    if ((label.textContent || \"\").includes(\"Reporting Year:\")) {\n      reportingYearLabel = label;\n    }\n  });\n\n  if (reportingYearLabel) {\n    // Find the input element\n  // @ts-ignore\n\n    const reportingYearInput = reportingYearLabel.closest(\".ACA_Form\")?.querySelector(\"input\") as HTMLInputElement | null;\n\n    if (reportingYearInput) {\n      // Set the value of the input element\n      reportingYearInput.value = currentYear.toString();\n    } else {\n      console.log(`❌ Input element not found`);\n    }\n  } else {\n    console.log(`❌ Label element not found`);\n  }\n}\n\nfunction updateCurrentQuarter(currentQuarter: number) {\n  const quarters: { [key: number]: string } = {\n    1: \"January-March\",\n    2: \"April-June\",\n    3: \"July-September\",\n    4: \"October-December\",\n  };\n\n  const currentQuarterValue = quarters[currentQuarter];\n  console.log(\"Updating current quarter to \" + currentQuarterValue);\n\n  // Find the label element\n  const labels = specificFrame?.querySelectorAll(\"label\");\n  let reportingPeriodLabel: HTMLLabelElement | null = null;\n  labels?.forEach((label) => {\n    if ((label.textContent || \"\").includes(\"Reporting Period:\")) {\n      reportingPeriodLabel = label;\n    }\n  });\n\n  if (reportingPeriodLabel) {\n    // Find the select element\n    // @ts-ignore\n    const reportingPeriodSelect = reportingPeriodLabel.closest(\".ACA_Form\")?.querySelector(\"select\") as HTMLSelectElement | null;\n\n    if (reportingPeriodSelect) {\n      // Set the value of the select element\n      reportingPeriodSelect.value = currentQuarterValue;\n\n      if (reportingPeriodSelect.value === quarters[currentQuarter]) {\n        console.log(`✅ Current quarter set to ${currentQuarter}`);\n      } else {\n        console.log(\n          `❌ Current quarter is not set correctly ${reportingPeriodSelect.value}`\n        );\n      }\n    } else {\n      console.log(`❌ Select element not found`);\n    }\n  } else {\n    console.log(`❌ Label element not found`);\n  }\n}\n\nfunction submitForm() {\n  console.log(`Submitting form`);\n\n  // Find the submit button by its ID\n  const submitButton = specificFrame?.querySelector(\"#ctl00_phPopup_btnSubmit\") as HTMLElement | null;\n\n  if (submitButton) {\n    // Create and dispatch a click event on the submit button\n    const clickEvent = new Event(\"click\", {\n      bubbles: true,\n      cancelable: true,\n    });\n\n    submitButton.dispatchEvent(clickEvent);\n\n    console.log(`✅ Form submitted`);\n  } else {\n    console.log(`❌ Submit button not found`);\n  }\n}","// Copyright 2023 ilya\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { fillOutForm } from \"./FilloutForm\";\n\n// @ts-ignore\nchrome.runtime.onMessage.addListener(\n  // @ts-ignore\n  (message: { data: FormDataItem[] }, sender, sendResponse) => {\n    const formData = message.data;\n    fillOutForm(\n      formData[0].typeOfStay,\n      formData[0].currentQuarter,\n      formData[0].currentYear,\n      formData[0].checkIn + \"/\" + formData[0].currentYear,\n      formData[0].checkOut + \"/\" + formData[0].currentYear,\n      formData[0].airbnbId\n    );\n  }\n);\n"],"names":["specificFrame","fillOutForm","typeOfStay","arguments","length","undefined","currentQuarter","currentYear","checkIn","checkOut","airbnbId","_window$frames$ACADia","_specificFrame","console","log","window","frames","document","querySelector","setupContext","_specificFrame2","selectElement","value","concat","updateTypeOfStay","_specificFrame7","quarters","currentQuarterValue","labels","querySelectorAll","reportingPeriodLabel","forEach","label","textContent","includes","_reportingPeriodLabel","reportingPeriodSelect","closest","updateCurrentQuarter","_specificFrame6","reportingYearLabel","_reportingYearLabel$c","reportingYearInput","toString","setCurrentYear","updateDate","_specificFrame4","serviceLabel","regex","test","parentACAForm","serviceSelect","serviceDropdownValues","option","push","service","selectAirbnb","_specificFrame3","labelElement","innerText","_labelElement$closest","input","updateAirbnbListingId","_specificFrame8","submitButton","clickEvent","Event","bubbles","cancelable","dispatchEvent","submitForm","labelText","dateValue","_specificFrame5","dateLabel","_dateLabel$closest","dateInput","chrome","runtime","onMessage","addListener","message","sender","sendResponse","formData","data"],"sourceRoot":""}